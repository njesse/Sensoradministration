# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-23 11:42
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('connectiontypes', '0011_auto_20161123_1100'),
        ('devices', '0002_device_location'),
    ]

    operations = [
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PhysicalQuantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='devices.Device')),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SensortypeCanMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rangeMin', models.CharField(blank=True, max_length=20, verbose_name='Measuring range lower limit')),
                ('rangeMax', models.CharField(blank=True, max_length=20, verbose_name='Measuring range upper limit')),
                ('measurement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.Measurement')),
                ('sensorType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.SensorType')),
            ],
        ),
        migrations.CreateModel(
            name='SensorTypeHasInterfaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('connectionType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='connectiontypes.ConnectionType')),
                ('sensorType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.SensorType')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=20)),
            ],
        ),
        migrations.AddField(
            model_name='sensortype',
            name='interfaces',
            field=models.ManyToManyField(through='sensors.SensorTypeHasInterfaces', to='connectiontypes.ConnectionType'),
        ),
        migrations.AddField(
            model_name='sensortype',
            name='measurements',
            field=models.ManyToManyField(through='sensors.SensortypeCanMeasure', to='sensors.Measurement'),
        ),
        migrations.AddField(
            model_name='sensor',
            name='sensortype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.SensorType'),
        ),
        migrations.AddField(
            model_name='measurement',
            name='physicalQuantity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.PhysicalQuantity'),
        ),
        migrations.AddField(
            model_name='measurement',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sensors.Unit'),
        ),
    ]
